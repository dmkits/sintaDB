/*! ExcelJS 28-04-2017 */
"use strict";function pushAttribute(a,b,c){a.push(" "),a.push(b),a.push('="'),a.push(utils.xmlEncode(c.toString())),a.push('"')}function pushAttributes(a,b){b&&_.each(b,function(b,c){void 0!==b&&pushAttribute(a,c,b)})}var _=require("./under-dash"),utils=require("./utils"),OPEN_ANGLE="<",CLOSE_ANGLE=">",OPEN_ANGLE_SLASH="</",CLOSE_SLASH_ANGLE="/>",EQUALS_QUOTE='="',QUOTE='"',SPACE=" ",XmlStream=module.exports=function(){this._xml=[],this._stack=[],this._rollbacks=[]};XmlStream.StdDocAttributes={version:"1.0",encoding:"UTF-8",standalone:"yes"},XmlStream.prototype={get tos(){return this._stack.length?this._stack[this._stack.length-1]:void 0},openXml:function(a){var b=this._xml;b.push("<?xml"),pushAttributes(b,a),b.push("?>\n")},openNode:function(a,b){var c=this.tos,d=this._xml;c&&this.open&&d.push(">"),this._stack.push(a),d.push("<"),d.push(a),pushAttributes(d,b),this.leaf=!0,this.open=!0},addAttribute:function(a,b){if(!this.open)throw new Error("Cannot write attributes to node if it is not open");pushAttribute(this._xml,a,b)},addAttributes:function(a){if(!this.open)throw new Error("Cannot write attributes to node if it is not open");pushAttributes(this._xml,a)},writeText:function(a){var b=this._xml;this.open&&(b.push(">"),this.open=!1),this.leaf=!1,b.push(utils.xmlEncode(a.toString()))},writeXml:function(a){this.open&&(this._xml.push(">"),this.open=!1),this.leaf=!1,this._xml.push(a)},closeNode:function(){var a=this._stack.pop(),b=this._xml;this.leaf?b.push("/>"):(b.push("</"),b.push(a),b.push(">")),this.open=!1,this.leaf=!1},leafNode:function(a,b,c){this.openNode(a,b),void 0!==c&&this.writeText(c),this.closeNode()},closeAll:function(){for(;this._stack.length;)this.closeNode()},addRollback:function(){this._rollbacks.push({xml:this._xml.length,stack:this._stack.length,leaf:this.leaf,open:this.open})},commit:function(){this._rollbacks.pop()},rollback:function(){var a=this._rollbacks.pop();this._xml.length>a.xml&&this._xml.splice(a.xml,this._xml.length-a.xml),this._stack.length>a.stack&&this._stack.splice(a.stack,this._stack.length-a.stack),this.leaf=a.leaf,this.open=a.open},get xml(){return this.closeAll(),this._xml.join("")}};